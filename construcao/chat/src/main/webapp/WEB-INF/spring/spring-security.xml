<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:security="http://www.springframework.org/schema/security"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
       http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<security:global-method-security
		secured-annotations="enabled" />

	<context:component-scan
		base-package="br.com.eits.desafio.chat.security, br.com.eits.desafio.chat.domain" />


	<security:http auto-config="true" use-expressions="true">
		<!-- <security:csrf token-repository-ref="csrfTokenRepository" /> <security:csrf 
			request-matcher-ref="csrfSecurityRequestMatcher" /> -->

		<security:csrf disabled="true" />
		<security:http-basic />

		<security:intercept-url pattern="/login"
			access="permitAll" />
		<security:intercept-url pattern="/app/**"
			access="permitAll" />
		<security:intercept-url pattern="/webjars/**"
			access="permitAll" />
		<security:intercept-url pattern="/dwr/**"
			access="permitAll()" />
<!--     		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />   -->

		<security:form-login 
			login-page="/login"
			login-processing-url="/authenticate" 
			username-parameter="username"
			password-parameter="password"
			always-use-default-target="true" 
			authentication-failure-url="./login-fail"
			authentication-success-handler-ref="authenticationSuccessHandler" 
			authentication-failure-handler-ref="authenticationFailureHandler"/>

		<security:logout invalidate-session="true"
			logout-success-url="/login" logout-url="/logout" />
		</security:http>

	<security:authentication-manager>
		<security:authentication-provider
			ref="customAuthenticationProvider" />
	</security:authentication-manager>

	<!-- <security:authentication-manager> <security:authentication-provider> 
		<security:password-encoder hash="bcrypt"/> <security:jdbc-user-service data-source-ref="dataSource" 
		users-by-username-query="select email, password, enabled from users where 
		email = ? and enabled = TRUE" authorities-by-username-query="select u.email 
		as login, u.user_role as role from users u where u.email = ? and enabled 
		= TRUE" /> </security:authentication-provider> </security:authentication-manager> -->

	<!-- <bean id="csrfTokenRepository" class="org.springframework.security.web.csrf.HttpSessionCsrfTokenRepository"> 
		<property name="headerName" value="X-XSRF-TOKEN" /> </bean> -->
		
		<bean id="authenticationFailureHandler" class="br.com.eits.desafio.chat.security.AuthenticationFailureHandler"/>
		<bean id="authenticationSuccessHandler" class="br.com.eits.desafio.chat.security.AuthenticationSuccessHandler"/>
		
<!-- 		<bean id="authenticationFailureHandler" class="org.springframework.security.web.authentication.ExceptionMappingAuthenticationFailureHandler">
		    <property name="exceptionMappings">
		        <props>
		            <prop key="org.springframework.security.authentication.BadCredentialsException">/errorPage.jsp?login_error=1</prop>
		            <prop key="org.springframework.security.authentication.CredentialsExpiredException">/login.jsp?status=2</prop>
		            <prop key="org.springframework.security.authentication.LockedException">/login.jsp?status=3</prop>
		            <prop key="org.springframework.security.authentication.DisabledException">/login.jsp?status=4</prop>     
		        </props>
		    </property>
		</bean>  -->
</beans>